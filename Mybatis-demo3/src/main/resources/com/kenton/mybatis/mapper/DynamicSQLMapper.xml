<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kenton.mybatis.mapper.DynamicSQLMapper">


    <!--sql片段-->
    <sql id="empColumns">eid,emp_name,age,sex,email</sql>
    <select id="getEmpByCondition" resultType="Emp">
        select <include refid="empColumns"/> from t_emp
        <!--
            当where标签中有内容 会自动生成where关键字 并且将内容前多余的and或者or去掉
            注意where不能将内容后多余的and或者or去掉
            当where标签中没有内容时 此时where标签没有任何效果
        -->
        <!--
            trim:
            prefix|suffix:将trim标签中内容前面或后面添加指定内容
            prefixOverrides|suffixOverrides:将trim标签中内容前面或后面去掉指定内容
            若标签中没有内容时 trim标签也没有任何效果
        -->
       <trim prefix="where" suffix="" suffixOverrides="and|or">
           <if test="empName != null and empName != ''">
               emp_name = #{empName}
           </if>
           <if test="age != null and age != ''">
               and age = #{age}
           </if>
           <if test="sex != null and sex != ''">
               and sex = #{sex}
           </if>
           <if test="email != null and email != ''">
               and email = #{email}
           </if>
       </trim>
    </select>

    <!--choose when otherwise 相当于if...else if...else-->
    <!--when至少有一个 而otherwise最后只有一个-->
    <select id="getEmpByChoose" resultType="Emp">
        select * from t_emp
        <trim prefix="where">
            <choose>
                <when test="empName != null and empName != ''">
                    emp_name = #{empName}
                </when>
                <when test="age != null and age != ''">
                    age = #{age}
                </when>
                <when test="sex != null and sex != ''">
                    sex = #{sex}
                </when>
                <otherwise>
                    did = 1
                </otherwise>
            </choose>
        </trim>
    </select>

    <!--foreach  在集合的用途-->
    <delete id="deleteMoreByArrayOne">
        delete from t_emp where eid in
        <foreach collection="eids" item="eid" separator="," open="(" close=")">
            #{eid}
        </foreach>
    </delete>
    <delete id="deleteMoreByArrayTwo">
        delete from t_emp where
        <foreach collection="eids" item="eid" separator="or">
            eid = #{eid}
        </foreach>
    </delete>


    <!--
       foreach 本质是for循环
       collection:设置需要循环的数组或集合
       item:表示数组或集合中的每一个数据
       separator:循环体之间的分隔符
       open:foreach标签所循环的所有内容的开始符
       close:结束符
    -->
    <insert id="insertMoreByList">
        insert into t_emp values
        <foreach collection="emps" item="emp" separator=",">
            (null,#{emp.empName},#{emp.age},#{emp.sex},#{emp.email},null)
        </foreach>
    </insert>
    

</mapper>